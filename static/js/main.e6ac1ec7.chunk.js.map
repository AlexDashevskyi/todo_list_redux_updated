{"version":3,"sources":["redux/action.js","TodoCreateForm.js","Dashboard.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["getTodos","dispatch","axios","get","then","result","console","log","data","type","payload","catch","error","createBtn","width","height","viewBox","className","fill","xmlns","d","fillRule","connect","state","todos","addTodo","newName","post","name","props","useState","newTodo","setNewTodo","value","onChange","event","target","onClick","deleteBtn","editBtn","deleteTodo","todoId","delete","editTodo","newTitle","patch","toggleTodo","done","put","moveUp","index","moveDown","_id","title","length","updateTodo","setUpdateTodo","editMode","setEditMode","titleStyle","textDecoration","e","style","checked","disabled","deleteAll","todo","getList","useEffect","map","el","i","key","Math","random","Boolean","window","location","hostname","match","initialState","action","newUpList","firstUpIndex","secondUpIndex","newDownList","firstDownIndex","secondDownIndex","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e6ac1ec7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport function getTodos() {\r\n    return (dispatch) => {\r\n        axios.get('http://localhost:5000/todo')\r\n            .then(result => {\r\n                console.log(result.data)\r\n                dispatch({\r\n                    type: 'GET_TODO',\r\n                    payload: result.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport function addTodo(newName){\r\n    return (dispatch) => {\r\n        axios.post('http://localhost:5000/todo',{name: newName})\r\n            .then(result => {\r\n                console.log(result.data)\r\n                dispatch(getTodos())\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport function deleteTodo(todoId){\r\n    return (dispatch) => {\r\n        axios.delete(`http://localhost:5000/todo/${todoId}`)\r\n            .then(result => {\r\n                console.log(result.data)\r\n                dispatch(getTodos())\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport function toggleTodo(todoId, done){\r\n    return (dispatch) => {\r\n        axios.put(`http://localhost:5000/todo/${todoId}`, {done: !done})\r\n            .then(result => {\r\n                console.log(result.data)\r\n                dispatch(getTodos())\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n}\r\n\r\nexport function editTodo(todoId, newTodo){\r\n    return (dispatch) => {\r\n        axios.patch(`http://localhost:5000/todo/${todoId}`, {name: newTodo})\r\n            .then(result => {\r\n                console.log(result.data)\r\n                dispatch(getTodos())\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from './redux/action'\r\n\r\nconst createBtn = (\r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-earmark-plus\" fill=\"currentColor\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"M9 1H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h5v-1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5v2.5A1.5 1.5 0 0 0 10.5 6H13v2h1V6L9 1z\"/>\r\n            <path fillRule=\"evenodd\"\r\n                  d=\"M13.5 10a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1H13v-1.5a.5.5 0 0 1 .5-.5z\"/>\r\n            <path fillRule=\"evenodd\" d=\"M13 12.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0v-2z\"/>\r\n        </svg>);\r\n\r\nfunction TodoCreateForm(props) {\r\n    const [newTodo, setNewTodo] =useState('')\r\n    \r\n    const addButtonHandler = () => {\r\n      props.addTodo(newTodo)\r\n        setNewTodo('')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            TODO LIST\r\n            <div className='mt-2'>\r\n                Create new todo(s);\r\n                <input value={newTodo} onChange={(event) => setNewTodo(event.target.value)} type='text'/>\r\n                <span onClick={addButtonHandler}>{createBtn}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.todos\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addTodo: (newName) => dispatch(addTodo(newName)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoCreateForm);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteTodo, toggleTodo, editTodo} from \"./redux/action\";\r\n\r\n\r\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n    <path fillRule=\"evenodd\"\r\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n</svg>);\r\n\r\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\"\r\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\r\n    <path fillRule=\"evenodd\"\r\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\r\n</svg>);\r\n\r\n\r\nfunction Dashboard(props) {\r\n\r\n    const {done, _id, index, title, length} = props;\r\n\r\n    const [updateTodo, setUpdateTodo] = useState('');\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const titleStyle = done ? {textDecoration: 'line-through'} : {};\r\n\r\n     const inputHandler = (e) => {\r\n        setUpdateTodo(e.target.value)\r\n    };\r\n\r\n    const saveButtonHandler = (todoId) => {\r\n        props.editTodo(todoId, updateTodo)\r\n        setEditMode(false);\r\n        setUpdateTodo(props.todos.name)\r\n    };\r\n    const moveUp = (index) => {\r\n        props.moveUp(index)\r\n    };\r\n    const moveDown = (index) => {\r\n        props.moveDown(index)\r\n    };\r\n\r\n    if (editMode) {\r\n        return (\r\n            <div>\r\n                <input type='text' value={updateTodo} onChange={inputHandler}/>\r\n                <button onClick={() => saveButtonHandler(_id)}>save</button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <span style={titleStyle}>\r\n                {title}\r\n                    <input type='checkbox' checked={done} onChange={() => props.toggleTodo(_id, done)}/>\r\n                <span className='mr-2 ml-1' onClick={() => setEditMode(true)}>{editBtn}</span>\r\n                <span onClick={() => props.deleteTodo(_id)}>{deleteBtn}</span>\r\n                    <button className=\"btn btn-light\" onClick={() => moveUp(index)} disabled={index === 0}>↑</button>\r\n                    <button className=\"btn btn-light\" onClick={() => moveDown(index)}\r\n                            disabled={index === length - 1}>↓</button>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.todos\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteTodo: (todoId) => dispatch(deleteTodo(todoId)),\r\n    editTodo: (todoId, newTitle) => dispatch(editTodo(todoId, newTitle)),\r\n    // editTodo: (todoId, newTitle) => dispatch({type: 'EDIT_TODO', payload: {todoId, newTitle}}),\r\n    // toggleTodo: (todoId) => dispatch({type: 'TOGGLE_TODO', payload: todoId}),\r\n    toggleTodo: (todoId, done) => dispatch(toggleTodo(todoId, done)),\r\n    moveUp: (index) => dispatch({type: 'MOVE_UP', payload: index}),\r\n    moveDown: (index) => dispatch({type: 'MOVE_DOWN', payload: index}),\r\n\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux'\nimport './App.css';\nimport TodoCreateForm from './TodoCreateForm';\nimport Dashboard from \"./Dashboard\";\nimport {getTodos} from \"./redux/action\";\n\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.getList();\n    }, [])\n\n    return (\n\n        <div className=\"App\">\n\n            <TodoCreateForm/>\n            {props.todos.map((el, i) =>\n                <Dashboard\n                    title={el.name}\n                    _id={el._id}\n                    index={i}\n                    done={el.done}\n                    key={Math.random()}\n                    length={props.todos.length}\n                />)}\n            <button onClick={() => props.deleteAll()}>delete all</button>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    todos: state.todos\n});\nconst mapDispatchToProps = (dispatch) => ({\n    deleteAll: (todo) => dispatch({type: 'DELETE_ALL', payload: todo}),\n    getList: () => dispatch(getTodos())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nconst initialState = {\r\n    todos: [\r\n        // {\r\n        //     title: 'First todo',\r\n        //     done: false,\r\n        //     id: Math.random()\r\n        // }, {\r\n        //     title: 'Second todo',\r\n        //     done: false,\r\n        //     id: Math.random()\r\n        // }, {\r\n        //     title: 'Third todo',\r\n        //     done: false,\r\n        //     id: Math.random()\r\n        // }, {\r\n        //     title: 'Fourth todo',\r\n        //     done: false,\r\n        //     id: Math.random()\r\n        // }\r\n    ],\r\n};\r\n\r\nconst todo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TODO':\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            }\r\n        // case 'TODO_ADD':\r\n        //     return {\r\n        //         ...state,\r\n        //         todos: [...state.todos, {title: action.payload, done: false, id: Math.random()}]\r\n        //     };\r\n\r\n        // case 'DELETE_TODO':\r\n        //     let newTodos = state.todos.filter(el => el.id !== action.payload)\r\n        //     return {\r\n        //         ...state,\r\n        //         todos: newTodos\r\n        //     };\r\n        case 'DELETE_ALL':\r\n            return {\r\n                ...state,\r\n                todos: []\r\n            }\r\n\r\n        // case 'TOGGLE_TODO':\r\n        //     return {\r\n        //         ...state,\r\n        //         todos: state.todos.map(el => {\r\n        //             if (el.id === action.payload)\r\n        //                 return ({...el, done: !el.done})\r\n        //             return el;\r\n        //         })\r\n        //     }\r\n        // case 'EDIT_TODO':\r\n        //     return {\r\n        //         ...state,\r\n        //         todos: state.todos.map(el => {\r\n        //             if (el.id === action.payload.todoId)\r\n        //                 return ({...el, title: action.payload.newTitle})\r\n        //             return el;\r\n        //         })\r\n        //     }\r\n        case 'MOVE_UP':\r\n            let newUpList = [...state.todos]\r\n            let firstUpIndex = newUpList[action.payload];\r\n            let secondUpIndex = newUpList[action.payload - 1];\r\n            newUpList[action.payload] = secondUpIndex;\r\n            newUpList[action.payload - 1] = firstUpIndex\r\n            // [firstUpIndex, secondUpIndex] = [secondUpIndex, firstUpIndex];\r\n            return {\r\n                ...state,\r\n                todos: [...newUpList]\r\n            }\r\n        case 'MOVE_DOWN':\r\n            let newDownList = [...state.todos]\r\n            let firstDownIndex = newDownList[action.payload];\r\n            let secondDownIndex = newDownList[action.payload + 1];\r\n            newDownList[action.payload] = secondDownIndex;\r\n            newDownList[action.payload + 1] = firstDownIndex\r\n            // [newUpList[action.payload], newUpList[action.payload + 1]] = [newUpList[action.payload + 1], newUpList[action.payload]];\r\n            return {\r\n                ...state,\r\n                todos: [...newDownList]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todo;\r\n","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport todo from './reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(todo, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}